# Assets
GET           /assets/*file                               controllers.Assets.versioned(path="/public", file: Asset)

# EventBus
GET           /events/bus                                 controllers.EventBusController.bus
POST          /events/subscribe                           controllers.EventBusController.subscribe
POST          /events/subscribe-all                       controllers.EventBusController.subscribeAll
GET           /events/unsubscribe                         controllers.EventBusController.unsubscribe

# Base
GET           /                                           controllers.HomeController.index
GET           /login                                      controllers.HomeController.login(continue: Option[String] ?= None)
POST          /login                                      controllers.HomeController.performLogin
GET           /logout                                     controllers.HomeController.logout

# Dashboard
GET           /dashboard                                  controllers.DashboardController.dashboard

# Profile
GET           /profile                                    controllers.ProfileController.autoProfile
GET           /profile/:user                              controllers.ProfileController.profile(user: utils.UUID)
GET           /profile/:user/edit                         controllers.ProfileController.edit(user: utils.UUID)
POST          /profile/:user/edit                         controllers.ProfileController.editSubmit(user: utils.UUID)
GET           /profile/:user/bind                         controllers.ProfileController.bind(user: utils.UUID)
POST          /profile/:user/bind                         controllers.ProfileController.bindPost(user: utils.UUID)
POST          /profile/:user/toon/:toon/disable           controllers.ProfileController.toonDisable(user: utils.UUID, toon: utils.UUID)
POST          /profile/:user/toon/:toon/enable            controllers.ProfileController.toonEnable(user: utils.UUID, toon: utils.UUID)
POST          /profile/:user/toon/:toon/promote           controllers.ProfileController.toonPromote(user: utils.UUID, toon: utils.UUID)
POST          /profile/:user/toon/:toon/update            controllers.ProfileController.toonUpdate(user: utils.UUID, toon: utils.UUID)
POST          /profile/:user/toon/:toon/remove            controllers.ProfileController.toonRemove(user: utils.UUID, toon: utils.UUID)
PUT           /profile/:user/toon/:toon/spec/:spec        controllers.ProfileController.toonSetSpec(user: utils.UUID, toon: utils.UUID, spec: Int)

# Addons
GET           /addons                                     controllers.AddonsController.list
GET           /addons/manifest                            controllers.AddonsController.manifest
GET           /addons/digest/:addon                       controllers.AddonsController.digest(addon)
GET           /addons/blob/:id                            controllers.AddonsController.blob(id)
POST          /addons/notify                              controllers.AddonsController.notifyUpdate

# Admin
GET           /admin                                      controllers.AdminController.home
GET           /admin/acl/users                            controllers.AclController.users
GET           /admin/acl/users/:user                      controllers.AclController.user(user: utils.UUID)
POST          /admin/acl/users/:user/invite               controllers.AclController.userInvite(user: utils.UUID)
DELETE        /admin/acl/users/:user/kick                 controllers.AclController.userKick(user: utils.UUID, group: utils.UUID, backToGroup: Boolean ?= false)
GET           /admin/acl/groups                           controllers.AclController.groups
POST          /admin/acl/groups                           controllers.AclController.createGroup
GET           /admin/acl/groups/:group                    controllers.AclController.group(group: utils.UUID)
POST          /admin/acl/groups/:group/grant              controllers.AclController.groupGrant(group: utils.UUID)
DELETE        /admin/acl/groups/:group/revoke             controllers.AclController.groupRevoke(group: utils.UUID, key: utils.UUID)
DELETE        /admin/acl/groups/:group                    controllers.AclController.deleteGroup(group: utils.UUID)
GET           /admin/acl/keys                             controllers.AclController.keys
POST          /admin/acl/keys                             controllers.AclController.createKey
DELETE        /admin/acl/keys/:key                        controllers.AclController.deleteKey(key: utils.UUID)

# Electron support
GET           /electron/bootstrap                         controllers.ElectronController.bootstrap


